name: 'Deploy Dev'

on:
  push:
    tags:
      - v**beta**

jobs:
  Deploy:
    runs-on: self-hosted
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Get Docker Image Url
        id: image
        env:
          CORE: harbor.ncuos.com/genius-auth/core
          SSH_DEV: harbor.ncuos.com/genius-auth/ssh-server
        run: |
          echo CORE_LATEST=${CORE}:latest >> $GITHUB_OUTPUT
          echo CORE_VERSION=${CORE}:${GITHUB_REF/refs\/tags\//} >> $GITHUB_OUTPUT
          echo SSH_DEV_LATEST=${SSH_DEV}:latest >> $GITHUB_OUTPUT
          echo SSH_DEV_VERSION=${SSH_DEV}:${GITHUB_REF/refs\/tags\//} >> $GITHUB_OUTPUT

      - name: Build Site
        run: |
          cd web
          pnpm install --frozen-lockfile --prod
          pnpm run build

      - name: Build Core Binary
        env:
          GOPRIVATE: github.com/ncuhome
          CGO_ENABLED: 0
        run: go build -gcflags=-trimpath=$GOPATH -asmflags=-trimpath=$GOPATH -ldflags '-extldflags "-static" -s -w' -o runner --tags="web" ./cmd/core

      - name: Build Core Docker Image
        run: |
          docker build . --file Dockerfile \
          --tag ${{ steps.image.outputs.CORE_VERSION }} \
          --tag ${{ steps.image.outputs.CORE_LATEST }}

      - name: Build sshDev Binary
        env:
          GOPRIVATE: github.com/ncuhome
          CGO_ENABLED: 0
        run: go build -gcflags=-trimpath=$GOPATH -asmflags=-trimpath=$GOPATH -ldflags '-extldflags "-static" -s -w' -o runner ./cmd/sshDev

      - name: Build sshDev Docker Image
        run: |
          docker build . --file ./cmd/sshDev/Dockerfile \
          --tag ${{ steps.image.outputs.SSH_DEV_VERSION }} \
          --tag ${{ steps.image.outputs.SSH_DEV_LATEST }}

      - name: Push
        run: |
          docker push ${{ steps.image.outputs.CORE_VERSION }}
          docker push ${{ steps.image.outputs.CORE_LATEST }}
          docker push ${{ steps.image.outputs.SSH_DEV_VERSION }}
          docker push ${{ steps.image.outputs.SSH_DEV_LATEST }}

      - name: Update Deployments
        uses: MultiMx/K8sQuickUpdateAction@v0.6
        with:
          k8s: |
            dev:
              backend: https://rancher.ncuhome.club
              token: ${{ secrets.CATTLE_TOKEN_LOCAL }}
          workloads: |
            -
              genius-auth:
                core:
                  image: ${{ steps.image.outputs.CORE_VERSION }}
                  wait: true
            -
              genius-auth:
                ssh-server:
                  image: ${{ steps.image.outputs.SSH_DEV_VERSION }}